<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="za.co.idea.ip.orm.bean.IpSolution" table="ip_solution">
		<id name="solId" type="java.lang.Long">
			<column name="sol_id" />
			<generator class="assigned" />
		</id>
		<many-to-one name="ipSolutionStatus" class="za.co.idea.ip.orm.bean.IpSolutionStatus" fetch="select" lazy="proxy">
			<column name="sol_status" not-null="true" />
		</many-to-one>
		<many-to-one name="ipSolutionCat" class="za.co.idea.ip.orm.bean.IpSolutionCat" fetch="select" lazy="proxy">
			<column name="sol_cat" />
		</many-to-one>
		<many-to-one name="ipUser" class="za.co.idea.ip.orm.bean.IpUser" fetch="select" lazy="proxy">
			<column name="sol_crtd_by" not-null="true" />
		</many-to-one>
		<many-to-one name="ipChallenge" class="za.co.idea.ip.orm.bean.IpChallenge" fetch="select" lazy="proxy">
			<column name="sol_chal_id" not-null="true" />
		</many-to-one>
		<property name="solTitle" type="java.lang.String">
			<column name="sol_title" length="100" not-null="true" />
		</property>
		<property name="solDesc" type="java.lang.String">
			<column name="sol_desc" length="1000" not-null="true" />
		</property>
		<property name="solTags" type="java.lang.String">
			<column name="sol_tags" length="500" />
		</property>
		<property name="solCrtdDt" type="java.sql.Timestamp">
			<column name="sol_crtd_dt" length="19" not-null="true" />
		</property>
	</class>
	<sql-query name="getSolutionCreatedByUser">
		select sol.* from ip_solution sol where sol.sol_crtd_by=:id
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
	<sql-query name="getSolutionByUser">
		select sol.* from ip_solution sol where sol.sol_crtd_by=:id union select sol.* from ip_solution sol where sol.sol_chal_id in (select icg.cg_chal_id from ip_challenge_group icg, ip_group_user igu where igu.gu_usr_id=:id and igu.gu_grp_id=icg.cg_group_id) union select sol.* from ip_solution sol where sol.sol_chal_id in (select ic.chal_id from ip_challenge ic where ic.chal_id not in (select icg.cg_chal_id from ip_challenge_group icg))
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
	<sql-query name="getSolutionByUserStatus">
		select sol.* from ip_solution sol where sol.sol_crtd_by=:id and sol.sol_status=:sid union select sol.* from ip_solution sol where sol.sol_chal_id in (select icg.cg_chal_id from ip_challenge_group icg, ip_group_user igu where igu.gu_usr_id=:id and igu.gu_grp_id=icg.cg_group_id) and sol.sol_status=:sid union select sol.* from ip_solution sol where sol.sol_chal_id in (select ic.chal_id from ip_challenge ic where ic.chal_id not in (select icg.cg_chal_id from ip_challenge_group icg)) and sol.sol_status=:sid
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
	<sql-query name="getSolutionByChallenge">
		select sol.* from ip_solution sol where sol.sol_chal_id=:id and sol.sol_status != 1 order by sol.sol_crtd_dt desc
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
	<sql-query name="getSolutionByStatus">
		select sol.* from ip_solution sol where rw.sol_status=:id
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
	<sql-query name="getReviewSolutionByStatus">
		select sol.* from ip_solution sol where rw.sol_status=3 and sol_chal_id in (SELECT cg_chal_id FROM lpdb.ip_challenge_group where cg_group_id in (SELECT gu_grp_id FROM lpdb.ip_group_user where gu_usr_id=:id and gu_grp_id in (SELECT fg_grp_id FROM lpdb.ip_func_group where fg_func_id=13)))
		<return alias="sol" class="za.co.idea.ip.orm.bean.IpSolution" />
	</sql-query>
</hibernate-mapping>
