<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="za.co.idea.ip.orm.bean.IpGroup" table="ip_group">
		<id name="groupId" type="java.lang.Long">
			<column name="group_id" />
			<generator class="assigned" />
		</id>
		<many-to-one name="ipUser" class="za.co.idea.ip.orm.bean.IpUser" fetch="select">
			<column name="group_admin_id" />
		</many-to-one>
		<many-to-one name="ipGroup" class="za.co.idea.ip.orm.bean.IpGroup" fetch="select">
			<column name="group_parent_id" />
		</many-to-one>
		<property name="groupName" type="java.lang.String">
			<column name="group_name" length="65535" not-null="true" />
		</property>
		<property name="groupStatus" type="java.lang.String">
			<column name="group_status" length="45" />
		</property>
		<property name="groupEmail" type="java.lang.String">
			<column name="group_email" length="65535" />
		</property>
		<property name="groupIsCore" type="java.lang.String">
			<column name="group_is_core" length="1" />
		</property>
		<property name="groupCrtdDt" type="java.sql.Timestamp">
			<column name="group_crtd_dt" length="19" not-null="true" />
		</property>
		<set name="ipUsers" inverse="true">
			<key>
				<column name="user_pri_grp_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpUser" />
		</set>
		<set name="ipReviews" inverse="true">
			<key>
				<column name="rev_grp_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpReview" />
		</set>
		<set name="ipIdeaGroups" inverse="true">
			<key>
				<column name="ig_grp_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpIdeaGroup" />
		</set>
		<set name="ipGroupUsers" inverse="true">
			<key>
				<column name="gu_grp_id" not-null="true" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpGroupUser" />
		</set>
		<set name="ipFuncGroups" inverse="true">
			<key>
				<column name="fg_grp_id" not-null="true" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpFuncGroup" />
		</set>
		<set name="ipRewardsGroups" inverse="true">
			<key>
				<column name="rg_group_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpRewardsGroup" />
		</set>
		<set name="ipGroups" inverse="true">
			<key>
				<column name="group_parent_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpGroup" />
		</set>
		<set name="ipChallengeGroups" inverse="true">
			<key>
				<column name="cg_group_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpChallengeGroup" />
		</set>
	</class>
	<sql-query name="getGroupsByStatus">
		select ig.* from ip_group ig where ig.group_status=:status
		<return alias="ig" class="za.co.idea.ip.orm.bean.IpGroup" />
	</sql-query>
	<sql-query name="getGroupsByParent">
		select ig.* from ip_group ig where ig.group_parent_id=:id
		<return alias="ig" class="za.co.idea.ip.orm.bean.IpGroup" />
	</sql-query>
	<sql-query name="getGroupsForReview">
		select distinct ig.* from ip_group ig, ip_group_user igu where ig.group_id=igu.gu_grp_id
		<return alias="ig" class="za.co.idea.ip.orm.bean.IpGroup" />
	</sql-query>
</hibernate-mapping>
