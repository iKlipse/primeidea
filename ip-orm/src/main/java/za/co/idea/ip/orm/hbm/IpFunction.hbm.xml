<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="za.co.idea.ip.orm.bean.IpFunction" table="ip_function">
		<id name="funcId" type="java.lang.Long">
			<column name="func_id" />
			<generator class="assigned" />
		</id>
		<many-to-one name="ipUser" class="za.co.idea.ip.orm.bean.IpUser"
			fetch="select">
			<column name="func_crtd_by" />
		</many-to-one>
		<property name="funcName" type="java.lang.String">
			<column name="func_name" length="65535" not-null="true" />
		</property>
		<property name="funcIsCore" type="java.lang.String">
			<column name="func_is_core" length="1" not-null="true" />
		</property>
		<property name="funcCrtdDt" type="java.sql.Timestamp">
			<column name="func_crtd_dt" length="19" />
		</property>
		<set name="ipFuncGroups" inverse="true">
			<key>
				<column name="fg_func_id" />
			</key>
			<one-to-many class="za.co.idea.ip.orm.bean.IpFuncGroup" />
		</set>
	</class>
	<sql-query name="getAllFunction">
		select func.* from ip_function func
		<return alias="func" class="za.co.idea.ip.orm.bean.IpFunction" />
	</sql-query>
	<sql-query name="getFunctionById">
		select func.* from ip_function func where func.func_id=:id
		<return alias="func" class="za.co.idea.ip.orm.bean.IpFunction" />
	</sql-query>
	<sql-query name="getFunctionByUserId">
		select func.func_name from ip_function func, ip_func_group grp,
		ip_group_user igu where igu.gu_usr_id=:id and
		igu.gu_grp_id=grp.fg_grp_id and grp.fg_func_id=func.func_id and
		func.func_is_core in ('y','Y')
		<return-scalar column="func_name" type="java.lang.String" />
	</sql-query>
</hibernate-mapping>
