<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Mapping file autogenerated by MyEclipse Persistence Tools -->
<hibernate-mapping>
	<class name="za.co.idea.ip.orm.bean.IpReview" table="ip_review" catalog="lpdb">
		<id name="revId" type="java.lang.Long">
			<column name="rev_id" />
			<generator class="assigned" />
		</id>
		<many-to-one name="ipGroup" class="za.co.idea.ip.orm.bean.IpGroup" fetch="select">
			<column name="rev_grp_id" />
		</many-to-one>
		<many-to-one name="ipUser" class="za.co.idea.ip.orm.bean.IpUser" fetch="select">
			<column name="rev_sel_user_id" />
		</many-to-one>
		<property name="revEntityId" type="java.lang.Long">
			<column name="rev_entity_id" />
		</property>
		<property name="revEntityName" type="java.lang.String">
			<column name="rev_entity_name" length="100" />
		</property>
		<property name="revEntityStatusId" type="java.lang.Integer">
			<column name="rev_entity_status_id" />
		</property>
		<property name="revCrtdDt" type="java.sql.Timestamp">
			<column name="rev_crtd_dt" length="19" not-null="true" />
		</property>
	</class>
	<sql-query name="getByEntityIdEntityNameStatus">
		select ib.* from ip_review ib where ib.rev_entity_id=:id and
		lower(ib.rev_entity_name)=lower(:tblNm) and rev_entity_status_id=:status
		<return alias="ib" class="za.co.idea.ip.orm.bean.IpReview" />
	</sql-query>
	<sql-query name="getByEntityIdEntityName">
		select ib.* from ip_review ib where ib.rev_entity_id=:id and
		lower(ib.rev_entity_name)=lower(:tblNm)
		<return alias="ib" class="za.co.idea.ip.orm.bean.IpReview" />
	</sql-query>
	<sql-query name="getReviewStatusCnt">
		select count(distinct ib.rev_entity_status_id) as cnt from ip_review ib where ib.rev_entity_id=:id and
		lower(ib.rev_entity_name)=lower(:tblNm)
		<return-scalar column="cnt" type="java.lang.Integer" />
	</sql-query>
	<sql-query name="deleteByEntityIdEntityNameStatus">
		delete from ip_review where rev_entity_id=:id and
		lower(rev_entity_name)=lower(:tblNm) and rev_entity_status_id=:status
	</sql-query>
	<sql-query name="getUnallocatedReview">
		select ib.* from ip_review ib where ib.rev_sel_user_id is null
		<return alias="ib" class="za.co.idea.ip.orm.bean.IpReview" />
	</sql-query>
	<sql-query name="getReviewByUserId">
		select ib.* from ip_review ib where ib.rev_sel_user_id=:id
		<return alias="ib" class="za.co.idea.ip.orm.bean.IpReview" />
	</sql-query>
	<sql-query name="updateReviewer">
		update ip_review set rev_sel_user_id=:uid where rev_entity_id=:id and rev_entity_name=:tblNm
	</sql-query>
</hibernate-mapping>
