package za.co.idea.ip.hook.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the IpUser service. Represents a row in the &quot;ip_user&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link za.co.idea.ip.hook.model.impl.IpUserModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link za.co.idea.ip.hook.model.impl.IpUserImpl}.
 * </p>
 *
 * @author VMPattamatta
 * @see IpUser
 * @see za.co.idea.ip.hook.model.impl.IpUserImpl
 * @see za.co.idea.ip.hook.model.impl.IpUserModelImpl
 * @generated
 */
public interface IpUserModel extends BaseModel<IpUser> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a ip user model instance should use the {@link IpUser} interface instead.
     */

    /**
     * Returns the primary key of this ip user.
     *
     * @return the primary key of this ip user
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this ip user.
     *
     * @param primaryKey the primary key of this ip user
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the user ID of this ip user.
     *
     * @return the user ID of this ip user
     */
    public long getUserId();

    /**
     * Sets the user ID of this ip user.
     *
     * @param userId the user ID of this ip user
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this ip user.
     *
     * @return the user uuid of this ip user
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this ip user.
     *
     * @param userUuid the user uuid of this ip user
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the user f name of this ip user.
     *
     * @return the user f name of this ip user
     */
    @AutoEscape
    public String getUserFName();

    /**
     * Sets the user f name of this ip user.
     *
     * @param userFName the user f name of this ip user
     */
    public void setUserFName(String userFName);

    /**
     * Returns the user l name of this ip user.
     *
     * @return the user l name of this ip user
     */
    @AutoEscape
    public String getUserLName();

    /**
     * Sets the user l name of this ip user.
     *
     * @param userLName the user l name of this ip user
     */
    public void setUserLName(String userLName);

    /**
     * Returns the user m name of this ip user.
     *
     * @return the user m name of this ip user
     */
    @AutoEscape
    public String getUserMName();

    /**
     * Sets the user m name of this ip user.
     *
     * @param userMName the user m name of this ip user
     */
    public void setUserMName(String userMName);

    /**
     * Returns the user ID num of this ip user.
     *
     * @return the user ID num of this ip user
     */
    public long getUserIdNum();

    /**
     * Sets the user ID num of this ip user.
     *
     * @param userIdNum the user ID num of this ip user
     */
    public void setUserIdNum(long userIdNum);

    /**
     * Returns the user screen name of this ip user.
     *
     * @return the user screen name of this ip user
     */
    @AutoEscape
    public String getUserScreenName();

    /**
     * Sets the user screen name of this ip user.
     *
     * @param userScreenName the user screen name of this ip user
     */
    public void setUserScreenName(String userScreenName);

    /**
     * Returns the user email of this ip user.
     *
     * @return the user email of this ip user
     */
    @AutoEscape
    public String getUserEmail();

    /**
     * Sets the user email of this ip user.
     *
     * @param userEmail the user email of this ip user
     */
    public void setUserEmail(String userEmail);

    /**
     * Returns the user contact of this ip user.
     *
     * @return the user contact of this ip user
     */
    @AutoEscape
    public String getUserContact();

    /**
     * Sets the user contact of this ip user.
     *
     * @param userContact the user contact of this ip user
     */
    public void setUserContact(String userContact);

    /**
     * Returns the user skills of this ip user.
     *
     * @return the user skills of this ip user
     */
    @AutoEscape
    public String getUserSkills();

    /**
     * Sets the user skills of this ip user.
     *
     * @param userSkills the user skills of this ip user
     */
    public void setUserSkills(String userSkills);

    /**
     * Returns the user bio of this ip user.
     *
     * @return the user bio of this ip user
     */
    @AutoEscape
    public String getUserBio();

    /**
     * Sets the user bio of this ip user.
     *
     * @param userBio the user bio of this ip user
     */
    public void setUserBio(String userBio);

    /**
     * Returns the user fb handle of this ip user.
     *
     * @return the user fb handle of this ip user
     */
    @AutoEscape
    public String getUserFbHandle();

    /**
     * Sets the user fb handle of this ip user.
     *
     * @param userFbHandle the user fb handle of this ip user
     */
    public void setUserFbHandle(String userFbHandle);

    /**
     * Returns the user tw handle of this ip user.
     *
     * @return the user tw handle of this ip user
     */
    @AutoEscape
    public String getUserTwHandle();

    /**
     * Sets the user tw handle of this ip user.
     *
     * @param userTwHandle the user tw handle of this ip user
     */
    public void setUserTwHandle(String userTwHandle);

    /**
     * Returns the user status of this ip user.
     *
     * @return the user status of this ip user
     */
    @AutoEscape
    public String getUserStatus();

    /**
     * Sets the user status of this ip user.
     *
     * @param userStatus the user status of this ip user
     */
    public void setUserStatus(String userStatus);

    /**
     * Returns the user employee ID of this ip user.
     *
     * @return the user employee ID of this ip user
     */
    @AutoEscape
    public String getUserEmployeeId();

    /**
     * Sets the user employee ID of this ip user.
     *
     * @param userEmployeeId the user employee ID of this ip user
     */
    public void setUserEmployeeId(String userEmployeeId);

    /**
     * Returns the pri grp ID of this ip user.
     *
     * @return the pri grp ID of this ip user
     */
    public long getPriGrpId();

    /**
     * Sets the pri grp ID of this ip user.
     *
     * @param priGrpId the pri grp ID of this ip user
     */
    public void setPriGrpId(long priGrpId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(IpUser ipUser);

    @Override
    public int hashCode();

    @Override
    public CacheModel<IpUser> toCacheModel();

    @Override
    public IpUser toEscapedModel();

    @Override
    public IpUser toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
